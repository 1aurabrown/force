{
  "name": "scroll-frame",
  "version": "0.0.4",
  "description": "Retain your scroll position between pages using an iframe. Especially helpful for infinite scrolling views.",
  "keywords": [
    "scroll",
    "infinite",
    "infinite scroll",
    "iframe",
    "scroll position",
    "retain scroll"
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/artsy/scroll-frame.git"
  },
  "author": {
    "name": "Craig Spaeth",
    "email": "craigspaeth@gmail.com",
    "url": "http://craigspaeth.com"
  },
  "engines": {
    "node": ">= 0.10.x"
  },
  "scripts": {
    "test": "mocha",
    "example": "node example/server.js"
  },
  "dependencies": {},
  "devDependencies": {
    "express": "*",
    "mocha": "*",
    "should": "*",
    "zombie": "*",
    "jquery-on-infinite-scroll": "*",
    "sinon": "*"
  },
  "readme": "# Scroll Frame\n\nRetain your scroll position between pages using an iframe. Especially helpful for infinite scrolling views.\n\n![](http://www.explainxkcd.com/wiki/images/5/56/infinite_scrolling.png)\n\n## Example\n\nInsert the scroll-frame-head script into your `<head>` tag across all views.\n\n````html\n<html>\n    <head>\n        <script src='scroll-frame-head-min.js'>\n    </head>\n    <body>\n        <h1>My detail page</h1>\n    </body>\n</html>\n````\n\nYou only need to add the main scroll frame script to the pages where you have an infinite scrolling list where you want to retain your scroll position.\n\n````html\n<html>\n    <head>\n        <script src='scroll-frame-head-min.js'>\n    </head>\n    <body>\n        <!-- Some infinite scrolling list action about to go down here -->\n        <ul id='my-infinite-scrolling-list'></ul>\n    </body>\n</html>\n````\n\nThen simply use the `scrollFrame` function to indicate what links should retain their scroll position when clicked on.\n\n````javascript\nscrollFrame('#my-infinite-scrolling-list a');\n````\n\nFor a working example check out the [example folder](https://github.com/artsy/scroll-frame/tree/master/example) which you can [visit a live demo here](http://artsy.github.io/scroll-frame) or run yourself by cloning the project and running `npm run example`.\n\n## How it Works\n\nscrollFrame will hijack the user's click for elements that match the query selector you pass in and instead of reloading the page it will append a modal-like iframe that sits on top of your viewport and points to the element's href. It then uses Html5 history APIs to make the back-button function as expected.\n\n## Caveats\n\n* scrollFrame will only open the next immediate page in an iframe (solving the simple use case of opening a detail page from an infinite scrolling list without losing your position). After clicking on a link inside the iframe the page refreshes to avoid going down a rabbit hole of stacked iframe modals and messy state.\n\n* Because scrollFrame uses HTML5 history APIs it does not work with older browsers and will simply not do anything when included. This should gracefully degrade as it'll just mean older browsers won't retain their scroll position.\n\n## Additionally\n\nScroll frame will add the `scroll-frame-loading` class to the `<body>` so you can set a loading state while the iframe is loading the page. The iframe has a z-index of 10 so as an example you may want to do something like `body.scroll-frame-loading #scroll-frame-spinner { display: block }`.\n\n# License\n\nMIT",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/artsy/scroll-frame/issues"
  },
  "homepage": "https://github.com/artsy/scroll-frame",
  "_id": "scroll-frame@0.0.4",
  "_from": "scroll-frame@*"
}
