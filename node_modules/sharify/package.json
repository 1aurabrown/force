{
  "name": "sharify",
  "version": "0.0.6",
  "description": "Easily share data between your server-side and browserify modules.",
  "keywords": [
    "browserify",
    "shared",
    "data",
    "expose",
    "bootstrap"
  ],
  "author": {
    "name": "Craig Spaeth",
    "email": "craigspaeth@gmail.com",
    "url": "http://craigspaeth.com"
  },
  "engines": {
    "node": ">= 0.10.x"
  },
  "scripts": {
    "test": "make test"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "express": "*",
    "browserify": "*",
    "jade": "*"
  },
  "readme": "# sharify\n\nEasily share data between your server-side and browserify modules.\n\n## Example\n\nGiven an [express](https://github.com/visionmedia/express) app with [jade](https://github.com/visionmedia/jade).\n\n1. Add middleware\n\n````javascript\napp.use(sharify({\n  API_URL: 'http://artsy.net/api/v1',\n  NODE_ENV: process.env.NODE_ENV\n}));\n````\n\n2. Inject script and use the shared data in template if you want\n\n````jade\nhtml\n  body\n    //- `sd` is short hand for sharify.data\n    if sd.NODE_ENV == 'development'\n      #debug-modal\n    #scripts\n      //- Make sure this is above your other scripts\n      != sharifyScript()\n      script( src='/bundle.js' )\n````\n\n3. Use in browserify/server-side modules\n\n````javascript\nvar sd = require('sharify').data;\n\nmodule.exports = function Artwork(id) {\n  this.url = sd.API_URL + '/artwork/'  + this.id;\n};\n````\n\n## Adding dynamic/request level data\n\nSharify simply injects data into the response locals. If you'd like to add dynamic data that can be required on the client like the static data passed to the constructure, simply inject it into `res.locals.sd`.\n\n````javascript\napp.use(sharify({\n  API_URL: 'http://artsy.net/api/v1',\n  NODE_ENV: process.env.NODE_ENV\n});\napp.use(function(req, res, next) {\n  res.locals.sd.SESSION_ID = req.session.id;\n  next();\n});\n````\n\n## Contributing\n\nPlease fork the project and submit a pull request with tests. Install node modules `npm install` and run tests with `make test`.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "sharify@0.0.6",
  "_from": "sharify@*"
}
