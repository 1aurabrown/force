{
  "name": "sharify",
  "version": "0.1.1",
  "description": "Easily share data between modules meant to run on the server and client using browserify.",
  "keywords": [
    "browserify",
    "shared",
    "data",
    "expose",
    "bootstrap"
  ],
  "author": {
    "name": "Craig Spaeth",
    "email": "craigspaeth@gmail.com",
    "url": "http://craigspaeth.com"
  },
  "engines": {
    "node": ">= 0.10.x"
  },
  "scripts": {
    "test": "make test"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "express": "*",
    "browserify": "*",
    "jade": "*"
  },
  "readme": "# sharify\n\nEasily share data between Browserify modules meant to run on the server and client.\n\n## Example\n\nThe following example shares a [Backbone Model](http://backbonejs.org/) between the server and browser. However, this could be applied to any module shared server/client.\n\nInject some constant data on the server and mount sharify\n\n````javascript\nvar sharify = require('sharify');\nsharify.data = {\n  API_URL: 'http://artsy.net/api/v1',\n  NODE_ENV: process.env.NODE_ENV\n};\napp.use(sharify);\n````\n\nUse in a module that can run on the server or client\n\n````javascript\nvar Backbone = require('backbone'),\n    API_URL = require('sharify').data.API_URL;\n\nvar Artwork = module.exports = Backbone.Model.extend({\n  urlRoot: API_URL + '/artwork/'\n};\n````\n\nInject sharify script in the view\n\n````jade\nhtml\n  body\n    if sharify.data.NODE_ENV == 'development'\n      #debug-modal\n    #scripts\n      //- Make sure this is above your other scripts\n      != sharify.script()\n      script( src='/bundle.js' )\n````\n\nUse the shared module server/client\n\n````javascript\n// server.js\nvar Artwork = require('../models/artwork');\n\napp.get('/artwork/:id', function(req, res) {\n  new Artwork({ id: req.params.id }).fetch(//...);\n});\n````\n\n````javascript\n// client.js\nvar Artwork = require('../models/artwork'),\n    View = require('view.js');\n\nnew View({ model: new Artwork() });\n````\n\n### Bootstrapping Request-level Data to the Client\n\nYou can use sharify to [bootstrap](http://backbonejs.org/#FAQ-bootstrap) dynamic data as well.\n\nInject data into the `sharify.data` local\n\n````javascript\nvar Artwork = require('../models/artwork');\n\napp.get('artwork/:id', function(req, res, next) {\n  new Artwork({ id: req.params.id }).fetch({\n    success: function(artwork) {\n      res.locals.sharify.data.ARTWORK_JSON = artwork.toJSON();\n      next();\n    }\n  });\n});\n````\n\nRequire the data on the client\n\n````javascript\nvar Artwork = require('../models/artwork'),\n    ARTWORK_JSON = require('sharify').data.ARTWORK_JSON,\n    View = require('view.js');\n\nnew View({ model: new Artwork(ARTWORK_JSON) });\n````\n\n## Contributing\n\nPlease fork the project and submit a pull request with tests. Install node modules `npm install` and run tests with `make test`.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "sharify@0.1.1",
  "dist": {
    "shasum": "ed86221c47b69016b6d447c453e395214e10266b"
  },
  "_from": "sharify@*",
  "_resolved": "https://registry.npmjs.org/sharify/-/sharify-0.1.1.tgz"
}
