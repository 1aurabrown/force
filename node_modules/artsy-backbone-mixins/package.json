{
  "name": "artsy-backbone-mixins",
  "version": "0.0.6",
  "description": "A library of Backbone mixins that DRY up some common domain logic and Artsy API rabbit holes..",
  "keywords": [
    "backbone",
    "helpers",
    "mixins",
    "util"
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/artsy/artsy-backbone-mixins.git"
  },
  "author": {
    "name": "Craig Spaeth",
    "email": "craigspaeth@gmail.com",
    "url": "http://craigspaeth.com"
  },
  "scripts": {
    "test": "mocha",
    "prepublish": "coffee -c lib",
    "postpublish": "rm lib/*.js"
  },
  "dependencies": {
    "showdown": "git://github.com/craigspaeth/showdown.git",
    "underscore": "*",
    "backbone": "*"
  },
  "devDependencies": {
    "coffee-script": "*",
    "mocha": "*",
    "should": "*",
    "sinon": "*"
  },
  "readme": "# artsy-backbone-mixins\n\nA library of Backbone mixins that DRY up some common domain logic and Artsy API rabbit holes.\n\nFunctions are namespaced by common sets of functionality such as \"Markdown\", \"Image\", or \"Dimensions\".\n\n````coffeescript\n_ = require 'underscore'\n{ Markdown, Image } = require 'artsy-backbone-mixins'\n\nclass Artwork extends Backbone.Model\n\n  _.extend @prototype, Markdown\n  _.extend @prototype, Image\n````\n\n## Markdown\n\n````coffeescript\n{ Markdown } = require 'artsy-backbone-mixins'\n\nclass Artwork extends Backbone.Model\n\n  _.extend @prototype, Markdown\n\n````\n\n### mdToHtml(attr)\n\nConverts an attribute into markdown using showdown.js\n\n````coffeescript\nartist.mdToHtml('biography')\n````\n\n### mdToHtmlToText(attr)\n\nConverts an attribute into markdown & escapes html.\n\n````coffeescript\nartist.mdToHtmlToText('biography')\n````\n\n### htmlToText(attr)\n\nEscapes html from an attribute.\n\n````coffeescript\nartist.htmlToText('biography')\n````\n\n## Dimensions\n\n````coffeescript\n{ Dimensions } = require 'artsy-backbone-mixins'\n\nclass Artwork extends Backbone.Model\n\n  _.extend @prototype, Dimensions\n\n````\n\n### dimensions([options])\n\nCommonly dimensions in Artsy's API are structured like `{ dimensions: { in: \"10 x 20\" }, metric: \"in\" }`. This provides a convenient method for outputting a formatted dimension string based on this data. Pass in some options for better formatting.\n\n````coffeescript\nartist.set { dimensions: { in: \"10 x 20 in\", cm: '13 1/2 x 24  2/3 cm' }, metric: \"in\" }\nartist.dimensions() # '10 x 20 in'\nartist.dimensions(metric: 'cm') # 13 1/2  x 24 2/3 cm\nartist.dimensions(metric: 'cm', format: 'superscript') # 13 ½  x 24 ⅔ cm\nartist.dimensions(format: 'decimal') # 13.5  x 24.33 cm\n````\n\n#### options.metric: ('in' or 'cm') (defaults to `@get('metric')`)\n\n````coffeescript\nartist.dimensions(metric: 'cm')\n````\n\n#### options.format: 'superscript'\n\nTurns 10 3/4 into superscript html like 10 `<sup>3/4</sup>`.\n\n````coffeescript\nartist.dimensions(format: 'superscript')\n````\n\n#### options.format: 'decimal'\n\nConverts porely formatted metric dimensions that appear as fractions into a proper metric decimal formatting.\n\n````coffeescript\nartist.dimensions(format: 'decimal')\n````\n\n## Fetch\n\n_Remember to pass in the artsy url._\n\n````coffeescript\n{ Fetch } = require 'artsy-backbone-mixins'\n{ ARTSY_URL } = require('sharify').data\n\nclass Artwork extends Backbone.Model\n\n  _.extend @prototype, Fetch(ARTSY_URL)\n\n````\n\n### fetchUntilEnd(options)\n\nFor paginated routes, fetches the collection's url until the endpoint returns 0 results.\n\n````coffeescript\nartworks.fetchUntilEnd success: ->\n  # Phew... I have all the artworks from Artsy\n````\n\n### fetchSetItemsByKey(key, options)\n\nFetches a set by key and populates the collection with the first result.\n\n````coffeescript\nfeaturedLinks.fetchSetItemsByKey 'homepage:featured-sections', success: ->\n  featuredLinks.first().get('name').should.equal 'Magnum Photos'\n````\n\n## Contributing\n\nPlease fork the project and submit a pull request with tests. Install node modules `npm install` and run tests with `npm test`.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/artsy/artsy-backbone-mixins/issues"
  },
  "homepage": "https://github.com/artsy/artsy-backbone-mixins",
  "_id": "artsy-backbone-mixins@0.0.6",
  "_from": "artsy-backbone-mixins@*"
}
